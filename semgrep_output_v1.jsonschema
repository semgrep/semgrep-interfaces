{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "cli_output",
  "description": "Translated by atdcat from 'semgrep_output_v1.atd'.",
  "type": "object",
  "required": [ "errors", "results", "paths" ],
  "properties": {
    "version": { "$ref": "#/definitions/version" },
    "errors": {
      "type": "array",
      "items": { "$ref": "#/definitions/cli_error" }
    },
    "results": {
      "type": "array",
      "items": { "$ref": "#/definitions/cli_match" }
    },
    "paths": { "$ref": "#/definitions/cli_paths" },
    "time": { "$ref": "#/definitions/cli_timing" },
    "explanations": {
      "type": "array",
      "items": { "$ref": "#/definitions/matching_explanation" }
    },
    "rules_by_engine": {
      "type": "array",
      "items": { "$ref": "#/definitions/rule_id_and_engine_kind" }
    },
    "engine_requested": { "$ref": "#/definitions/engine_kind" }
  },
  "definitions": {
    "raw_json": {},
    "version": { "type": "string" },
    "position": {
      "type": "object",
      "required": [ "line", "col", "offset" ],
      "properties": {
        "line": { "type": "integer" },
        "col": { "type": "integer" },
        "offset": { "type": "integer" }
      }
    },
    "fpath": { "type": "string" },
    "location": {
      "type": "object",
      "required": [ "path", "start", "end" ],
      "properties": {
        "path": { "$ref": "#/definitions/fpath" },
        "start": { "$ref": "#/definitions/position" },
        "end": { "$ref": "#/definitions/position" }
      }
    },
    "rule_id": { "type": "string" },
    "rule_id_and_engine_kind": {
      "type": "array",
      "minItems": 2,
      "items": false,
      "prefixItems": [
        { "$ref": "#/definitions/rule_id" },
        { "$ref": "#/definitions/engine_kind" }
      ]
    },
    "engine_kind": { "oneOf": [ { "const": "OSS" }, { "const": "PRO" } ] },
    "core_match": {
      "type": "object",
      "required": [ "rule_id", "location", "extra" ],
      "properties": {
        "rule_id": { "$ref": "#/definitions/rule_id" },
        "location": { "$ref": "#/definitions/location" },
        "extra": { "$ref": "#/definitions/core_match_extra" }
      }
    },
    "core_match_extra": {
      "type": "object",
      "required": [ "metavars", "engine_kind" ],
      "properties": {
        "message": { "type": "string" },
        "metavars": { "$ref": "#/definitions/metavars" },
        "dataflow_trace": {
          "$ref": "#/definitions/core_match_dataflow_trace"
        },
        "rendered_fix": { "type": "string" },
        "engine_kind": { "$ref": "#/definitions/engine_kind" },
        "extra_extra": { "$ref": "#/definitions/raw_json" }
      }
    },
    "core_match_call_trace": {
      "oneOf": [
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [
            { "const": "CoreLoc" }, { "$ref": "#/definitions/location" }
          ]
        },
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [
            { "const": "CoreCall" },
            {
              "type": "array",
              "minItems": 3,
              "items": false,
              "prefixItems": [
                { "$ref": "#/definitions/location" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/core_match_intermediate_var"
                  }
                },
                { "$ref": "#/definitions/core_match_call_trace" }
              ]
            }
          ]
        }
      ]
    },
    "core_match_dataflow_trace": {
      "type": "object",
      "required": [],
      "properties": {
        "taint_source": { "$ref": "#/definitions/core_match_call_trace" },
        "intermediate_vars": {
          "type": "array",
          "items": { "$ref": "#/definitions/core_match_intermediate_var" }
        },
        "taint_sink": { "$ref": "#/definitions/core_match_call_trace" }
      }
    },
    "core_match_intermediate_var": {
      "type": "object",
      "required": [ "location" ],
      "properties": { "location": { "$ref": "#/definitions/location" } }
    },
    "metavars": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/metavar_value" }
    },
    "metavar_value": {
      "type": "object",
      "required": [ "start", "end", "abstract_content" ],
      "properties": {
        "start": { "$ref": "#/definitions/position" },
        "end": { "$ref": "#/definitions/position" },
        "abstract_content": { "type": "string" },
        "propagated_value": { "$ref": "#/definitions/svalue_value" }
      }
    },
    "svalue_value": {
      "type": "object",
      "required": [ "svalue_abstract_content" ],
      "properties": {
        "svalue_start": { "$ref": "#/definitions/position" },
        "svalue_end": { "$ref": "#/definitions/position" },
        "svalue_abstract_content": { "type": "string" }
      }
    },
    "core_error": {
      "type": "object",
      "required": [ "error_type", "severity", "location", "message" ],
      "properties": {
        "rule_id": { "$ref": "#/definitions/rule_id" },
        "error_type": { "$ref": "#/definitions/core_error_kind" },
        "severity": { "$ref": "#/definitions/core_severity" },
        "location": { "$ref": "#/definitions/location" },
        "message": { "type": "string" },
        "details": { "type": "string" }
      }
    },
    "core_error_kind": {
      "oneOf": [
        { "const": "Lexical error" },
        { "const": "Syntax error" },
        { "const": "Other syntax error" },
        { "const": "AST builder error" },
        { "const": "Rule parse error" },
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [
            { "const": "Pattern parse error" },
            { "type": "array", "items": { "type": "string" } }
          ]
        },
        { "const": "Invalid YAML" },
        { "const": "Internal matching error" },
        { "const": "Semgrep match found" },
        { "const": "Too many matches" },
        { "const": "Fatal error" },
        { "const": "Timeout" },
        { "const": "Out of memory" },
        { "const": "Timeout during interfile analysis" },
        { "const": "OOM during interfile analysis" },
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [
            { "const": "PartialParsing" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/location" }
            }
          ]
        }
      ]
    },
    "core_severity": {
      "oneOf": [ { "const": "error" }, { "const": "warning" } ]
    },
    "core_stats": {
      "type": "object",
      "required": [ "okfiles", "errorfiles" ],
      "properties": {
        "okfiles": { "type": "integer" },
        "errorfiles": { "type": "integer" }
      }
    },
    "skipped_target": {
      "type": "object",
      "required": [ "path", "reason", "details" ],
      "properties": {
        "path": { "$ref": "#/definitions/fpath" },
        "reason": { "$ref": "#/definitions/skip_reason" },
        "details": { "type": "string" },
        "rule_id": { "$ref": "#/definitions/rule_id" }
      }
    },
    "skip_reason": {
      "oneOf": [
        { "const": "gitignore_patterns_match" },
        { "const": "always_skipped" },
        { "const": "semgrepignore_patterns_match" },
        { "const": "cli_include_flags_do_not_match" },
        { "const": "cli_exclude_flags_match" },
        { "const": "exceeded_size_limit" },
        { "const": "analysis_failed_parser_or_internal_error" },
        { "const": "excluded_by_config" },
        { "const": "wrong_language" },
        { "const": "too_big" },
        { "const": "minified" },
        { "const": "binary" },
        { "const": "irrelevant_rule" },
        { "const": "too_many_matches" }
      ]
    },
    "skipped_rule": {
      "type": "object",
      "required": [ "rule_id", "details", "position" ],
      "properties": {
        "rule_id": { "$ref": "#/definitions/rule_id" },
        "details": { "type": "string" },
        "position": { "$ref": "#/definitions/position" }
      }
    },
    "core_timing": {
      "type": "object",
      "required": [ "targets", "rules", "max_memory_bytes" ],
      "properties": {
        "targets": {
          "type": "array",
          "items": { "$ref": "#/definitions/target_time" }
        },
        "rules": {
          "type": "array",
          "items": { "$ref": "#/definitions/rule_id" }
        },
        "rules_parse_time": { "type": "number" },
        "max_memory_bytes": { "type": "integer" }
      }
    },
    "target_time": {
      "type": "object",
      "required": [ "path", "rule_times", "run_time" ],
      "properties": {
        "path": { "$ref": "#/definitions/fpath" },
        "rule_times": {
          "type": "array",
          "items": { "$ref": "#/definitions/rule_times" }
        },
        "run_time": { "type": "number" }
      }
    },
    "rule_times": {
      "type": "object",
      "required": [ "rule_id", "parse_time", "match_time" ],
      "properties": {
        "rule_id": { "$ref": "#/definitions/rule_id" },
        "parse_time": { "type": "number" },
        "match_time": { "type": "number" }
      }
    },
    "matching_explanation": {
      "type": "object",
      "required": [ "op", "children", "matches", "loc" ],
      "properties": {
        "op": { "$ref": "#/definitions/matching_operation" },
        "children": {
          "type": "array",
          "items": { "$ref": "#/definitions/matching_explanation" }
        },
        "matches": {
          "type": "array",
          "items": { "$ref": "#/definitions/core_match" }
        },
        "loc": { "$ref": "#/definitions/location" }
      }
    },
    "matching_operation": {
      "oneOf": [
        { "const": "And" },
        { "const": "Or" },
        { "const": "Inside" },
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [ { "const": "XPat" }, { "type": "string" } ]
        },
        { "const": "Negation" },
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [ { "const": "Filter" }, { "type": "string" } ]
        },
        { "const": "Taint" },
        { "const": "TaintSource" },
        { "const": "TaintSink" },
        { "const": "TaintSanitizer" },
        { "const": "EllipsisAndStmts" },
        { "const": "ClassHeaderAndElems" }
      ]
    },
    "cve_result": {
      "type": "object",
      "required": [ "url", "filename", "funcnames" ],
      "properties": {
        "url": { "type": "string" },
        "filename": { "type": "string" },
        "funcnames": { "type": "array", "items": { "type": "string" } }
      }
    },
    "cve_results": {
      "type": "array",
      "items": { "$ref": "#/definitions/cve_result" }
    },
    "core_match_results": {
      "type": "object",
      "required": [
        "matches", "errors", "stats", "rules_by_engine", "engine_requested"
      ],
      "properties": {
        "matches": {
          "type": "array",
          "items": { "$ref": "#/definitions/core_match" }
        },
        "errors": {
          "type": "array",
          "items": { "$ref": "#/definitions/core_error" }
        },
        "skipped": {
          "type": "array",
          "items": { "$ref": "#/definitions/skipped_target" }
        },
        "skipped_rules": {
          "type": "array",
          "items": { "$ref": "#/definitions/skipped_rule" }
        },
        "explanations": {
          "type": "array",
          "items": { "$ref": "#/definitions/matching_explanation" }
        },
        "stats": { "$ref": "#/definitions/core_stats" },
        "time": { "$ref": "#/definitions/core_timing" },
        "rules_by_engine": {
          "type": "array",
          "items": { "$ref": "#/definitions/rule_id_and_engine_kind" }
        },
        "engine_requested": { "$ref": "#/definitions/engine_kind" }
      }
    },
    "cli_error": {
      "type": "object",
      "required": [ "code", "level", "type" ],
      "properties": {
        "code": { "type": "integer" },
        "level": { "type": "string" },
        "type": { "type": "string" },
        "rule_id": { "$ref": "#/definitions/rule_id" },
        "message": { "type": "string" },
        "path": { "$ref": "#/definitions/fpath" },
        "long_msg": { "type": "string" },
        "short_msg": { "type": "string" },
        "spans": {
          "type": "array",
          "items": { "$ref": "#/definitions/error_span" }
        },
        "help": { "type": "string" }
      }
    },
    "error_span": {
      "type": "object",
      "required": [ "file", "start", "end" ],
      "properties": {
        "file": { "$ref": "#/definitions/fpath" },
        "start": { "$ref": "#/definitions/position_bis" },
        "end": { "$ref": "#/definitions/position_bis" },
        "source_hash": { "type": "string" },
        "config_start": { "$ref": "#/definitions/position_bis" },
        "config_end": { "$ref": "#/definitions/position_bis" },
        "config_path": {
          "type": [ "array", "null" ],
          "items": { "type": "string" }
        },
        "context_start": { "$ref": "#/definitions/position_bis" },
        "context_end": { "$ref": "#/definitions/position_bis" }
      }
    },
    "position_bis": {
      "type": "object",
      "required": [ "line", "col" ],
      "properties": {
        "line": { "type": "integer" },
        "col": { "type": "integer" }
      }
    },
    "cli_match_call_trace": {
      "oneOf": [
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [
            { "const": "CliLoc" },
            {
              "type": "array",
              "minItems": 2,
              "items": false,
              "prefixItems": [
                { "$ref": "#/definitions/location" }, { "type": "string" }
              ]
            }
          ]
        },
        {
          "type": "array",
          "minItems": 2,
          "items": false,
          "prefixItems": [
            { "const": "CliCall" },
            {
              "type": "array",
              "minItems": 3,
              "items": false,
              "prefixItems": [
                {
                  "type": "array",
                  "minItems": 2,
                  "items": false,
                  "prefixItems": [
                    { "$ref": "#/definitions/location" },
                    { "type": "string" }
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/cli_match_intermediate_var"
                  }
                },
                { "$ref": "#/definitions/cli_match_call_trace" }
              ]
            }
          ]
        }
      ]
    },
    "cli_match_dataflow_trace": {
      "type": "object",
      "required": [],
      "properties": {
        "taint_source": { "$ref": "#/definitions/cli_match_call_trace" },
        "intermediate_vars": {
          "type": "array",
          "items": { "$ref": "#/definitions/cli_match_intermediate_var" }
        },
        "taint_sink": { "$ref": "#/definitions/cli_match_call_trace" }
      }
    },
    "cli_match_taint_source": {
      "type": "object",
      "required": [ "location", "content" ],
      "properties": {
        "location": { "$ref": "#/definitions/location" },
        "content": { "type": "string" }
      }
    },
    "cli_match_intermediate_var": {
      "type": "object",
      "required": [ "location", "content" ],
      "properties": {
        "location": { "$ref": "#/definitions/location" },
        "content": { "type": "string" }
      }
    },
    "cli_match": {
      "type": "object",
      "required": [ "check_id", "path", "start", "end", "extra" ],
      "properties": {
        "check_id": { "$ref": "#/definitions/rule_id" },
        "path": { "$ref": "#/definitions/fpath" },
        "start": { "$ref": "#/definitions/position" },
        "end": { "$ref": "#/definitions/position" },
        "extra": { "$ref": "#/definitions/cli_match_extra" }
      }
    },
    "cli_match_extra": {
      "type": "object",
      "required": [
        "fingerprint", "lines", "message", "metadata", "severity"
      ],
      "properties": {
        "metavars": { "$ref": "#/definitions/metavars" },
        "fingerprint": { "type": "string" },
        "lines": { "type": "string" },
        "message": { "type": "string" },
        "metadata": { "$ref": "#/definitions/raw_json" },
        "severity": { "type": "string" },
        "fix": { "type": "string" },
        "fix_regex": { "$ref": "#/definitions/fix_regex" },
        "is_ignored": { "type": "boolean" },
        "sca_info": { "$ref": "#/definitions/sca_info" },
        "fixed_lines": { "type": "array", "items": { "type": "string" } },
        "dataflow_trace": {
          "$ref": "#/definitions/cli_match_dataflow_trace"
        },
        "engine_kind": { "$ref": "#/definitions/engine_kind" },
        "extra_extra": { "$ref": "#/definitions/raw_json" }
      }
    },
    "fix_regex": {
      "type": "object",
      "required": [ "regex", "replacement" ],
      "properties": {
        "regex": { "type": "string" },
        "replacement": { "type": "string" },
        "count": { "type": "integer" }
      }
    },
    "cli_output_extra": {
      "type": "object",
      "required": [ "paths" ],
      "properties": {
        "paths": { "$ref": "#/definitions/cli_paths" },
        "time": { "$ref": "#/definitions/cli_timing" },
        "explanations": {
          "type": "array",
          "items": { "$ref": "#/definitions/matching_explanation" }
        },
        "rules_by_engine": {
          "type": "array",
          "items": { "$ref": "#/definitions/rule_id_and_engine_kind" }
        },
        "engine_requested": { "$ref": "#/definitions/engine_kind" }
      }
    },
    "cli_paths": {
      "type": "object",
      "required": [ "scanned" ],
      "properties": {
        "scanned": { "type": "array", "items": { "type": "string" } },
        "_comment": { "type": "string" },
        "skipped": {
          "type": "array",
          "items": { "$ref": "#/definitions/cli_skipped_target" }
        }
      }
    },
    "cli_skipped_target": {
      "type": "object",
      "required": [ "path", "reason" ],
      "properties": {
        "path": { "$ref": "#/definitions/fpath" },
        "reason": { "$ref": "#/definitions/skip_reason" }
      }
    },
    "cli_timing": {
      "type": "object",
      "required": [
        "rules", "rules_parse_time", "profiling_times", "targets",
        "total_bytes"
      ],
      "properties": {
        "rules": {
          "type": "array",
          "items": { "$ref": "#/definitions/rule_id_dict" }
        },
        "rules_parse_time": { "type": "number" },
        "profiling_times": {
          "type": "object",
          "additionalProperties": { "type": "number" }
        },
        "targets": {
          "type": "array",
          "items": { "$ref": "#/definitions/cli_target_times" }
        },
        "total_bytes": { "type": "integer" },
        "max_memory_bytes": { "type": "integer" }
      }
    },
    "contributor": {
      "type": "object",
      "required": [ "commit_author_name", "commit_author_email" ],
      "properties": {
        "commit_author_name": { "type": "string" },
        "commit_author_email": { "type": "string" }
      }
    },
    "contribution": {
      "type": "object",
      "required": [ "commit_hash", "commit_timestamp", "contributor" ],
      "properties": {
        "commit_hash": { "type": "string" },
        "commit_timestamp": { "type": "string" },
        "contributor": { "$ref": "#/definitions/contributor" }
      }
    },
    "contributions": {
      "type": "object",
      "required": [ "contributions" ],
      "properties": {
        "contributions": {
          "type": "array",
          "items": { "$ref": "#/definitions/contribution" }
        }
      }
    },
    "rule_id_dict": {
      "type": "object",
      "required": [ "id" ],
      "properties": { "id": { "$ref": "#/definitions/rule_id" } }
    },
    "cli_target_times": {
      "type": "object",
      "required": [
        "path", "num_bytes", "match_times", "parse_times", "run_time"
      ],
      "properties": {
        "path": { "$ref": "#/definitions/fpath" },
        "num_bytes": { "type": "integer" },
        "match_times": { "type": "array", "items": { "type": "number" } },
        "parse_times": { "type": "array", "items": { "type": "number" } },
        "run_time": { "type": "number" }
      }
    },
    "sca_info": {
      "type": "object",
      "required": [
        "reachable", "reachability_rule", "sca_finding_schema",
        "dependency_match"
      ],
      "properties": {
        "reachable": { "type": "boolean" },
        "reachability_rule": { "type": "boolean" },
        "sca_finding_schema": { "type": "integer" },
        "dependency_match": { "$ref": "#/definitions/dependency_match" }
      }
    },
    "dependency_match": {
      "type": "object",
      "required": [ "dependency_pattern", "found_dependency", "lockfile" ],
      "properties": {
        "dependency_pattern": { "$ref": "#/definitions/dependency_pattern" },
        "found_dependency": { "$ref": "#/definitions/found_dependency" },
        "lockfile": { "type": "string" }
      }
    },
    "ecosystem": {
      "oneOf": [
        { "const": "npm" },
        { "const": "pypi" },
        { "const": "gem" },
        { "const": "gomod" },
        { "const": "cargo" },
        { "const": "maven" },
        { "const": "composer" }
      ]
    },
    "transitivity": {
      "oneOf": [
        { "const": "direct" },
        { "const": "transitive" },
        { "const": "unknown" }
      ]
    },
    "dependency_pattern": {
      "type": "object",
      "required": [ "ecosystem", "package", "semver_range" ],
      "properties": {
        "ecosystem": { "$ref": "#/definitions/ecosystem" },
        "package": { "type": "string" },
        "semver_range": { "type": "string" }
      }
    },
    "found_dependency": {
      "type": "object",
      "required": [
        "package", "version", "ecosystem", "allowed_hashes", "transitivity"
      ],
      "properties": {
        "package": { "type": "string" },
        "version": { "type": "string" },
        "ecosystem": { "$ref": "#/definitions/ecosystem" },
        "allowed_hashes": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "resolved_url": { "type": "string" },
        "transitivity": { "$ref": "#/definitions/transitivity" },
        "line_number": { "type": "integer" }
      }
    },
    "ci_scan_results": {
      "type": "object",
      "required": [
        "findings", "ignores", "token", "searched_paths", "renamed_paths",
        "rule_ids"
      ],
      "properties": {
        "findings": {
          "type": "array",
          "items": { "$ref": "#/definitions/finding" }
        },
        "ignores": {
          "type": "array",
          "items": { "$ref": "#/definitions/finding" }
        },
        "token": { "type": [ "string", "null" ] },
        "searched_paths": { "type": "array", "items": { "type": "string" } },
        "renamed_paths": { "type": "array", "items": { "type": "string" } },
        "rule_ids": { "type": "array", "items": { "type": "string" } },
        "contributions": { "$ref": "#/definitions/contributions" }
      }
    },
    "finding_hashes": {
      "type": "object",
      "required": [
        "start_line_hash", "end_line_hash", "code_hash", "pattern_hash"
      ],
      "properties": {
        "start_line_hash": { "type": "string" },
        "end_line_hash": { "type": "string" },
        "code_hash": { "type": "string" },
        "pattern_hash": { "type": "string" }
      }
    },
    "finding": {
      "type": "object",
      "required": [
        "check_id", "path", "line", "column", "end_line", "end_column",
        "message", "severity", "index", "commit_date", "syntactic_id",
        "metadata", "is_blocking"
      ],
      "properties": {
        "check_id": { "$ref": "#/definitions/rule_id" },
        "path": { "$ref": "#/definitions/fpath" },
        "line": { "type": "integer" },
        "column": { "type": "integer" },
        "end_line": { "type": "integer" },
        "end_column": { "type": "integer" },
        "message": { "type": "string" },
        "severity": {},
        "index": { "type": "integer" },
        "commit_date": { "type": "string" },
        "syntactic_id": { "type": "string" },
        "match_based_id": { "type": "string" },
        "hashes": { "$ref": "#/definitions/finding_hashes" },
        "metadata": { "$ref": "#/definitions/raw_json" },
        "is_blocking": { "type": "boolean" },
        "fixed_lines": { "type": "array", "items": { "type": "string" } },
        "sca_info": { "$ref": "#/definitions/sca_info" },
        "dataflow_trace": {
          "$ref": "#/definitions/cli_match_dataflow_trace"
        }
      }
    }
  }
}
